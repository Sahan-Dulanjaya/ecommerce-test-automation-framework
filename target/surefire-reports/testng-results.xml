<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-07T16:27:40 IST" name="Product Test Suite" finished-at="2025-07-07T16:28:14 IST" duration-ms="34503">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidations.loginErrorValidation()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" name="loginErrorValidation" class="ecommercewebsite.ErrorValidations"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" name="submitOrder" class="ecommercewebsite.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-07-07T16:27:40 IST" name="Error Validations Test" finished-at="2025-07-07T16:28:06 IST" duration-ms="25952">
      <class name="ecommercewebsite.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:40 IST" name="launchApplication" finished-at="2025-07-07T16:27:46 IST" duration-ms="6056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:46 IST" name="loginErrorValidation" finished-at="2025-07-07T16:27:47 IST" duration-ms="1137" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ecommercewebsite.ErrorValidations.loginErrorValidation(ErrorValidations.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:47 IST" name="tearDown" finished-at="2025-07-07T16:27:47 IST" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:47 IST" name="launchApplication" finished-at="2025-07-07T16:27:52 IST" duration-ms="4683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:52 IST" name="loginErrorValidation" finished-at="2025-07-07T16:27:53 IST" duration-ms="1016" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ecommercewebsite.ErrorValidations.loginErrorValidation(ErrorValidations.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:54 IST" name="tearDown" finished-at="2025-07-07T16:27:55 IST" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:55 IST" name="launchApplication" finished-at="2025-07-07T16:27:58 IST" duration-ms="3022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:27:58 IST" name="productErrorValidation" finished-at="2025-07-07T16:28:05 IST" duration-ms="7281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.ErrorValidations@f68f0dc]" started-at="2025-07-07T16:28:05 IST" name="tearDown" finished-at="2025-07-07T16:28:06 IST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ecommercewebsite.ErrorValidations -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-07-07T16:27:40 IST" name="Submit Order Test" finished-at="2025-07-07T16:28:14 IST" duration-ms="34503">
      <class name="ecommercewebsite.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:27:40 IST" name="launchApplication" finished-at="2025-07-07T16:27:44 IST" duration-ms="4111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:27:44 IST" name="submitOrder" data-provider="getData" finished-at="2025-07-07T16:27:52 IST" duration-ms="7389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Adidas123, email=ecommercesite@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:27:52 IST" name="tearDown" finished-at="2025-07-07T16:27:52 IST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:27:52 IST" name="launchApplication" finished-at="2025-07-07T16:27:58 IST" duration-ms="5719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:27:58 IST" name="submitOrder" data-provider="getData" finished-at="2025-07-07T16:28:03 IST" duration-ms="5278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Adidas123, email=ecommercesite@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:28:03 IST" name="tearDown" finished-at="2025-07-07T16:28:03 IST" duration-ms="401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:28:03 IST" name="launchApplication" finished-at="2025-07-07T16:28:06 IST" duration-ms="2985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:28:06 IST" name="OrderHistoryTest" finished-at="2025-07-07T16:28:13 IST" depends-on-methods="ecommercewebsite.SubmitOrderTest.submitOrder" duration-ms="6334" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for condition (visibility of element located by By.cssSelector: button[routerlink='/dashboard/myorders']) to be refreshed (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:4465}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:4465/devtool..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: afb26cb5d9a77994835a00a7630ee00e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for condition (visibility of element located by By.cssSelector: button[routerlink='/dashboard/myorders']) to be refreshed (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:4465}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:4465/devtool..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: afb26cb5d9a77994835a00a7630ee00e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at ecommercewebsite.AbstractComponents.AbstractComponents.waitForElementToAppear(AbstractComponents.java:39)
at ecommercewebsite.AbstractComponents.AbstractComponents.goToOrderPage(AbstractComponents.java:31)
at ecommercewebsite.SubmitOrderTest.OrderHistoryTest(SubmitOrderTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecommercewebsite.SubmitOrderTest@4c163e3]" started-at="2025-07-07T16:28:13 IST" name="tearDown" finished-at="2025-07-07T16:28:14 IST" duration-ms="883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ecommercewebsite.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Product Test Suite -->
</testng-results>
